//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.07.08 at 10:38:38 AM EDT 
//


package adaschema;

import exceptions.NamingException;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for Ordinary_Type_Declaration complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Ordinary_Type_Declaration">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="sloc" type="{}Source_Location"/>
 *         &lt;element name="names_ql" type="{}Defining_Name_List"/>
 *         &lt;element name="discriminant_part_q" type="{}Definition_Class"/>
 *         &lt;element name="type_declaration_view_q" type="{}Definition_Class"/>
 *         &lt;element name="aspect_specifications_ql" type="{}Element_List"/>
 *       &lt;/sequence>
 *       &lt;attribute name="checks" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Ordinary_Type_Declaration", propOrder = {
    "sloc",
    "namesQl",
    "discriminantPartQ",
    "typeDeclarationViewQ",
    "aspectSpecificationsQl"
})
public class OrdinaryTypeDeclaration
    extends JaxBSuperclass
{

    @XmlElement(required = true)
    protected SourceLocation sloc;
    @XmlElement(name = "names_ql", required = true)
    protected DefiningNameList namesQl;
    @XmlElement(name = "discriminant_part_q", required = true)
    protected DefinitionClass discriminantPartQ;
    @XmlElement(name = "type_declaration_view_q", required = true)
    protected DefinitionClass typeDeclarationViewQ;
    @XmlElement(name = "aspect_specifications_ql", required = true)
    protected ElementList aspectSpecificationsQl;
    @XmlAttribute(name = "checks")
    protected String checks;

    /**
     * HELPER_METHOD
     * @return
     */
    public List<String> getEnumLiterals() {
        List<String> resultingEnumLiterals = new ArrayList<>();

        if(getTypeDeclarationViewQ()!=null
                && getTypeDeclarationViewQ().getEnumerationTypeDefinition()!=null
                && getTypeDeclarationViewQ().getEnumerationTypeDefinition().getEnumerationLiteralDeclarationsQl()!=null) {
            for (JaxBSuperclass thing : getTypeDeclarationViewQ().getEnumerationTypeDefinition().getEnumerationLiteralDeclarationsQl().getNotAnElementOrOrdinaryTypeDeclarationOrTaskTypeDeclaration()) {
                if(thing instanceof EnumerationLiteralSpecification) {
                    resultingEnumLiterals.add(((DefiningEnumerationLiteral) ((EnumerationLiteralSpecification) thing).getNamesQl().getNotAnElementOrDefiningIdentifierOrDefiningCharacterLiteral().get(0)).getDefName());
                }
            }
        }

        return resultingEnumLiterals;
    }

    /**
     * HELPER_METHOD
     * @return
     */
    public PackageDeclaration getParentPackage() {
        if(getParent()==null || getParent().getParent()==null || !(getParent().getParent() instanceof PackageDeclaration))
            return null;
        return (PackageDeclaration)getParent().getParent();
    }

    /**
     * HELPER_METHOD
     * @return
     */
    public String getName() throws NamingException {
        try {
            for (JaxBSuperclass thing : getNamesQl().getNotAnElementOrDefiningIdentifierOrDefiningCharacterLiteral()) {
                if (thing instanceof DefiningIdentifier) {
                    return ((DefiningIdentifier) thing).getDefName();
                }
            }
        } catch(Exception e) {
            throw new NamingException("Ordinary type has some different naming structure than expected!", e);
        }
        throw new NamingException("Ordinary type has some different naming structure than expected!");
    }

    /**
     * HELPER_METHOD
     * @return
     */
    public List<ComponentDeclaration> getComponentDeclarations() {
        List<ComponentDeclaration> result = new ArrayList<>();

        List<JaxBSuperclass> componentList = new ArrayList<>();

        if(getTypeDeclarationViewQ().getRecordTypeDefinition()!=null && getTypeDeclarationViewQ().getRecordTypeDefinition().getRecordDefinitionQ().getRecordDefinition()!=null) {
            if(getTypeDeclarationViewQ().getRecordTypeDefinition().getRecordDefinitionQ().getRecordDefinition().getRecordComponentsQl().getNotAnElementOrComponentDeclarationOrNullComponent().size()>0) {
                componentList = getTypeDeclarationViewQ().getRecordTypeDefinition().getRecordDefinitionQ().getRecordDefinition().getRecordComponentsQl().getNotAnElementOrComponentDeclarationOrNullComponent();
            }
        } else if(getTypeDeclarationViewQ().getTaggedRecordTypeDefinition()!=null && getTypeDeclarationViewQ().getTaggedRecordTypeDefinition().getRecordDefinitionQ().getRecordDefinition()!=null) {
            if(getTypeDeclarationViewQ().getTaggedRecordTypeDefinition().getRecordDefinitionQ().getRecordDefinition().getRecordComponentsQl().getNotAnElementOrComponentDeclarationOrNullComponent().size()>0) {
                componentList = getTypeDeclarationViewQ().getTaggedRecordTypeDefinition().getRecordDefinitionQ().getRecordDefinition().getRecordComponentsQl().getNotAnElementOrComponentDeclarationOrNullComponent();
            }
        } else if(getTypeDeclarationViewQ().getDerivedRecordExtensionDefinition()!=null && getTypeDeclarationViewQ().getDerivedRecordExtensionDefinition().getRecordDefinitionQ().getRecordDefinition()!=null) {
            if(getTypeDeclarationViewQ().getDerivedRecordExtensionDefinition().getRecordDefinitionQ().getRecordDefinition().getRecordComponentsQl().getNotAnElementOrComponentDeclarationOrNullComponent().size()>0) {
                componentList = getTypeDeclarationViewQ().getDerivedRecordExtensionDefinition().getRecordDefinitionQ().getRecordDefinition().getRecordComponentsQl().getNotAnElementOrComponentDeclarationOrNullComponent();
            }
        }

        for (JaxBSuperclass component:componentList) {
            if(component instanceof ComponentDeclaration) {
                result.add((ComponentDeclaration) component);
            }
        }

        return result;
    }

    /**
     * Gets the value of the sloc property.
     * 
     * @return
     *     possible object is
     *     {@link SourceLocation }
     *     
     */
    public SourceLocation getSloc() {
        return sloc;
    }

    /**
     * Sets the value of the sloc property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceLocation }
     *     
     */
    public void setSloc(SourceLocation value) {
        this.sloc = value;
    }

    /**
     * Gets the value of the namesQl property.
     * 
     * @return
     *     possible object is
     *     {@link DefiningNameList }
     *     
     */
    public DefiningNameList getNamesQl() {
        return namesQl;
    }

    /**
     * Sets the value of the namesQl property.
     * 
     * @param value
     *     allowed object is
     *     {@link DefiningNameList }
     *     
     */
    public void setNamesQl(DefiningNameList value) {
        this.namesQl = value;
    }

    /**
     * Gets the value of the discriminantPartQ property.
     * 
     * @return
     *     possible object is
     *     {@link DefinitionClass }
     *     
     */
    public DefinitionClass getDiscriminantPartQ() {
        return discriminantPartQ;
    }

    /**
     * Sets the value of the discriminantPartQ property.
     * 
     * @param value
     *     allowed object is
     *     {@link DefinitionClass }
     *     
     */
    public void setDiscriminantPartQ(DefinitionClass value) {
        this.discriminantPartQ = value;
    }

    /**
     * Gets the value of the typeDeclarationViewQ property.
     * 
     * @return
     *     possible object is
     *     {@link DefinitionClass }
     *     
     */
    public DefinitionClass getTypeDeclarationViewQ() {
        return typeDeclarationViewQ;
    }

    /**
     * Sets the value of the typeDeclarationViewQ property.
     * 
     * @param value
     *     allowed object is
     *     {@link DefinitionClass }
     *     
     */
    public void setTypeDeclarationViewQ(DefinitionClass value) {
        this.typeDeclarationViewQ = value;
    }

    /**
     * Gets the value of the aspectSpecificationsQl property.
     * 
     * @return
     *     possible object is
     *     {@link ElementList }
     *     
     */
    public ElementList getAspectSpecificationsQl() {
        return aspectSpecificationsQl;
    }

    /**
     * Sets the value of the aspectSpecificationsQl property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElementList }
     *     
     */
    public void setAspectSpecificationsQl(ElementList value) {
        this.aspectSpecificationsQl = value;
    }

    /**
     * Gets the value of the checks property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChecks() {
        return checks;
    }

    /**
     * Sets the value of the checks property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChecks(String value) {
        this.checks = value;
    }

}
